# Generated by Django 5.2.5 on 2025-08-20 21:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Artist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('bio', models.TextField(blank=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='artists/')),
                ('spotify_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Album',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('cover_art', models.ImageField(blank=True, null=True, upload_to='albums/')),
                ('release_date', models.DateField()),
                ('spotify_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='streaming.artist')),
            ],
        ),
        migrations.CreateModel(
            name='Playlist',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('description', models.TextField(blank=True)),
                ('is_public', models.BooleanField(default=False)),
                ('cover_image', models.ImageField(blank=True, null=True, upload_to='playlists/')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-updated_at'],
            },
        ),
        migrations.CreateModel(
            name='Track',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('duration', models.PositiveIntegerField(help_text='Duration in seconds')),
                ('track_number', models.PositiveIntegerField(default=1)),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='tracks/')),
                ('preview_url', models.URLField(blank=True, help_text='Preview URL for 30-second clips')),
                ('genre', models.CharField(blank=True, max_length=100)),
                ('mood', models.CharField(blank=True, max_length=100)),
                ('tempo', models.CharField(blank=True, max_length=50)),
                ('key_signature', models.CharField(blank=True, max_length=10)),
                ('play_count', models.PositiveBigIntegerField(default=0)),
                ('skip_count', models.PositiveBigIntegerField(default=0)),
                ('like_count', models.PositiveIntegerField(default=0)),
                ('spotify_id', models.CharField(blank=True, max_length=100, unique=True)),
                ('isrc', models.CharField(blank=True, help_text='International Standard Recording Code', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('album', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='streaming.album')),
                ('artist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='streaming.artist')),
            ],
            options={
                'ordering': ['album', 'track_number'],
            },
        ),
        migrations.CreateModel(
            name='PlaylistTrack',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.PositiveIntegerField()),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('playlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='streaming.playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='streaming.track')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.AddField(
            model_name='playlist',
            name='tracks',
            field=models.ManyToManyField(through='streaming.PlaylistTrack', to='streaming.track'),
        ),
        migrations.CreateModel(
            name='UserListening',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('played_at', models.DateTimeField(auto_now_add=True)),
                ('duration_played', models.PositiveIntegerField(help_text='Seconds played')),
                ('completed', models.BooleanField(default=False)),
                ('source', models.CharField(default='direct', max_length=50)),
                ('playlist', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='streaming.playlist')),
                ('track', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='streaming.track')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['artist', '-play_count'], name='streaming_t_artist__877787_idx'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['genre', '-play_count'], name='streaming_t_genre_316645_idx'),
        ),
        migrations.AddIndex(
            model_name='track',
            index=models.Index(fields=['-created_at'], name='streaming_t_created_541067_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='playlisttrack',
            unique_together={('playlist', 'track')},
        ),
        migrations.AddIndex(
            model_name='playlist',
            index=models.Index(fields=['user', '-updated_at'], name='streaming_p_user_id_3e01d2_idx'),
        ),
        migrations.AddIndex(
            model_name='userlistening',
            index=models.Index(fields=['user', '-played_at'], name='streaming_u_user_id_4db177_idx'),
        ),
        migrations.AddIndex(
            model_name='userlistening',
            index=models.Index(fields=['track', '-played_at'], name='streaming_u_track_i_216be4_idx'),
        ),
    ]
